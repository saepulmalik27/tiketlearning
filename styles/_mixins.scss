// breakpoint
@mixin media-max-width($width) {
    @media (max-width: $width) {
        @content;
    }
}

@mixin media-min-width($width) {
    @media (min-width: $width) {
        @content;
    }
}

@import './breakpoints';

@mixin main-container-width {
    width: $main-container-width;
    margin: 0 auto;
}

@mixin main-container-width-with-padding($padding) {
    width: calc(#{$main-container-width} + (2 * #{$padding}));
    margin: 0 auto;
    padding: 0 $padding;
}

@mixin main-container-width {
    width: $main-container-width;
    margin: 0 auto;
}

@mixin smaller-main-container-width {
    width: $smaller-main-container-width;
    margin: 0 auto;
}

@mixin responsive-container-width {
    width: 100%;
    padding-left: 2rem;
    padding-right: 2rem;
    overflow: hidden;

    @include media-max-width($mobile-breakpoint) {
        padding-left: 1.63rem;
        padding-right: 1.63rem;
    }
}

@mixin set-image-size($height) {
    width: auto;
    height: $height;

    img {
        width: inherit;
        height: inherit;
    }
}

@mixin set-cover-size($size) {
    display: flex;
    justify-content: center;
    align-items: center;
    width: $size;
    height: $size;

    img {
        background-color: $onload-cover;
        width: inherit;
        height: inherit;
        padding-bottom: inherit;
    }
}

@mixin set-absolute-center-position() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin set-absolute-position($top, $left) {
    position: absolute;
    top: $top;
    left: $left;
}

@mixin set-left-bottom-absolute-position($bottom, $left) {
    position: absolute;
    bottom: $bottom;
    left: $left;
}

@mixin set-right-bottom-absolute-position($bottom, $right) {
    position: absolute;
    bottom: $bottom;
    right: $right;
}

@mixin global-gap() {
    padding: 2.1rem 7.5rem;
    @include media-max-width($initial-responsive-breakpoint) {
        padding: 1.6rem 8vw;
    }
    @include media-max-width($mobile-breakpoint) {
        padding: 1.2rem 8vw;
    }
}

@mixin verticalless-global-gap() {
    padding: 0 7.5rem;
    @include media-max-width($initial-responsive-breakpoint) {
        padding: 0 8vw;
    }
    @include media-max-width($mobile-breakpoint) {
        padding: 0 8vw;
    }
}

@mixin header-gap() {
    padding: 0.5rem 7.5rem;
    @include media-max-width($initial-responsive-breakpoint) {
        padding: 0.5rem 8vw;
    }
    @include media-max-width($mobile-breakpoint) {
        padding: 0.5rem 8vw;
    }
}

@mixin global-radius() {
    border-radius: 1.25rem;
}

@mixin button_animation() {
    position: relative;
    // // position: relative;
    //     z-index: 10;
    &::before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        border-radius: 1.25rem;
        height: 0.75rem;
        background-color: $secondary-peach;
        // transform-origin: left;
        transform: scaleX(0);
        transition: transform 0.2s, height 0.4s cubic-bezier(1, 0, 0, 1) 0.2s;
    }

    .text {
        position: relative;
        z-index: 10;
        font-weight: bold;
        display: flex;
        align-items: center;
    }

    &:hover::before {
        transform: scaleX(1);
        height: 100%;
    }
}

@mixin section-2-col() {
    display: flex;
    .item {
        flex: 1 1 50%;
        display: flex;
        align-items: center;
    }
    &.column {
        flex-direction: column;
    }
    &.column_reverse {
        flex-direction: column-reverse;
        @include media-max-width($mobile-breakpoint) {
            flex-direction: column-reverse;
        }
    }
    &.row_reverse {
        flex-direction: row-reverse;
        @include media-max-width($mobile-breakpoint) {
            flex-direction: column-reverse;
        }
    }

    @include media-max-width($mobile-breakpoint) {
        flex-direction: column;
    }
}
